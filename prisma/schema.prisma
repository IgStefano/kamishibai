generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    campaigns     Campaign[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Campaign {
    id         String  @id @unique @default(cuid())
    gameMaster String
    name       String
    image      String?
    quests     Quest[]
    players    User[]
    status     Int     @default(1)
}

model Quest {
    id               String     @id @unique @default(cuid())
    name             String
    description      String?
    createdAt        DateTime   @default(now())
    recommendedLevel Int?
    nextObjective    String?
    activities       Activity[]
    isVisible        Boolean    @default(true)
    reward           String?
    campaign         Campaign   @relation(fields: [campaignId], references: [id])
    campaignId       String
    status           Int        @default(1)
}

model Activity {
    id      String @id @unique @default(cuid())
    name    String
    status  Int
    quest   Quest  @relation(fields: [questId], references: [id])
    questId String
}

model UserCampaignRoles {
    id         String @id @unique @default(cuid())
    userId     String
    campaignId String
    role       Int
}
